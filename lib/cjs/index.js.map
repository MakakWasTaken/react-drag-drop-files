{"version":3,"file":"index.js","sources":["../../src/style.ts","../../src/utils.ts","../../src/DrawTypes.tsx","../../src/ImageAdd.tsx","../../src/useDragging.tsx","../../src/FileUploader.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nconst primary = '#0658c2',\n  darkGray = '#666',\n  lightGray = '#999';\n\nconst defaultStyle = css`\n  display: flex;\n  align-items: center;\n  min-width: 322px;\n  max-width: 508px;\n  height: 48px;\n  border: dashed 2px ${primary};\n  padding: 8px 16px 8px 8px;\n  border-radius: 5px;\n  cursor: pointer;\n  flex-grow: 0;\n`;\nexport const UploaderWrapper = styled.label<any>`\n  position: relative;\n  ${(props) => (props.overRide ? '' : defaultStyle)};\n  &.is-disabled {\n    border: dashed 2px ${darkGray};\n    cursor: no-drop;\n    svg {\n      fill: ${darkGray};\n      color: ${darkGray};\n      path {\n        fill: ${darkGray};\n        color: ${darkGray};\n      }\n    }\n  }\n  & > input {\n    display: none;\n  }\n`;\n/**\n *\n * @internal\n */\nexport const HoverMsg = styled.div`\n  border: dashed 2px ${darkGray};\n  border-radius: 5px;\n  background-color: ${lightGray};\n  opacity: 0.5;\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  & > span {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n  }\n`;\n/**\n *\n * @internal\n */\nexport const DescriptionWrapper = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  flex-grow: 1;\n  & > span {\n    font-size: 12px;\n    color: ${(props) => (props.error ? 'red' : darkGray)};\n  }\n  .file-types {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    max-width: 100px;\n  }\n`;\n/**\n *\n * @internal\n */\nexport const Description = styled.span`\n  font-size: 14px;\n  color: ${darkGray};\n  span {\n    text-decoration: underline;\n  }\n`;\n","/**\n * Converting the file size to MB\n * @param size : Size to be converted;\n * @returns number\n *\n * @internal\n */\nexport const getFileSizeMB = (size: number): number => {\n  return size / 1000 / 1000;\n};\n\n/**\n *\n * Check if the file uploaded is in the type list or not\n * @param file - The File uploaded\n * @param types - Available types\n * @returns boolean\n *\n * @internal\n */\nexport const checkType = (file: File, types: Array<string>): boolean => {\n  const extension: string = file.name.split('.').pop() as string;\n  const loweredTypes = types.map((type) => type.toLowerCase());\n  return loweredTypes.includes(extension.toLowerCase());\n};\n\n/**\n * Get the files for input \"accept\" attribute\n * @param types - Allowed types\n * @returns string\n *\n * @internal\n */\nexport const acceptedExt = (types: Array<string> | undefined) => {\n  if (types === undefined) return '';\n  return types.map((type) => `.${type.toLowerCase()}`).join(',');\n};\n","import { FC } from 'react';\n\ntype Props = {\n  types?: Array<string>;\n  minSize?: number;\n  maxSize?: number;\n};\n/**\n * Draw the types and sizes restrictions for the uploading.\n * @param {Object} fileData file data types, minSize, maxSize\n * @returns JSX Element | null\n *\n * @internal\n */\nexport const DrawTypes: FC<Props> = ({ types, minSize, maxSize }) => {\n  if (types) {\n    const stringTypes = types.toString();\n    let size = '';\n    if (maxSize) size += `size >= ${maxSize}, `;\n    if (minSize) size += `size <= ${minSize}, `;\n    return (\n      <span title={`${size}types: ${stringTypes}`} className=\"file-types\">\n        {stringTypes}\n      </span>\n    );\n  }\n  return null;\n};\n\nexport default DrawTypes;\n","/**\n * Draw SVG add image\n * @returns SVG\n *\n * @internal\n */\nexport default function ImageAdd(): JSX.Element {\n  return (\n    <svg\n      width=\"32\"\n      height=\"32\"\n      viewBox=\"0 0 32 32\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.33317 6.66667H22.6665V16H25.3332V6.66667C25.3332 5.196 24.1372 4 22.6665 4H5.33317C3.8625 4 2.6665 5.196 2.6665 6.66667V22.6667C2.6665 24.1373 3.8625 25.3333 5.33317 25.3333H15.9998V22.6667H5.33317V6.66667Z\"\n        fill=\"#0658C2\"\n      />\n      <path\n        d=\"M10.6665 14.6667L6.6665 20H21.3332L15.9998 12L11.9998 17.3333L10.6665 14.6667Z\"\n        fill=\"#0658C2\"\n      />\n      <path\n        d=\"M25.3332 18.6667H22.6665V22.6667H18.6665V25.3333H22.6665V29.3333H25.3332V25.3333H29.3332V22.6667H25.3332V18.6667Z\"\n        fill=\"#0658C2\"\n      />\n    </svg>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nlet draggingCount = 0;\ntype Params = {\n  labelRef: any;\n  inputRef: any;\n  multiple?: boolean | false;\n  handleChanges: (arg0: Array<File>) => boolean;\n  onDrop?: (arg0: Array<File>) => void;\n};\n\n/**\n *\n * @param data - labelRef, inputRef, handleChanges, onDrop\n * @returns boolean - the state.\n *\n * @internal\n */\nexport default function useDragging({\n  labelRef,\n  inputRef,\n  multiple,\n  handleChanges,\n  onDrop\n}: Params): boolean {\n  const [dragging, setDragging] = useState(false);\n  const handleClick = useCallback(() => {\n    inputRef.current.click();\n  }, [inputRef]);\n\n  const handleDragIn = useCallback((ev) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    draggingCount++;\n    if (ev.dataTransfer.items && ev.dataTransfer.items.length !== 0) {\n      setDragging(true);\n    }\n  }, []);\n  const handleDragOut = useCallback((ev) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    draggingCount--;\n    if (draggingCount > 0) return;\n    setDragging(false);\n  }, []);\n  const handleDrag = useCallback((ev) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }, []);\n  const handleDrop = useCallback(\n    (ev) => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      setDragging(false);\n      draggingCount = 0;\n\n      const eventFiles = ev.dataTransfer.files;\n      if (eventFiles && eventFiles.length > 0) {\n        const files = multiple ? eventFiles : eventFiles[0];\n        const success = handleChanges(files);\n        if (onDrop && success) onDrop(files);\n      }\n    },\n    [handleChanges]\n  );\n  useEffect(() => {\n    const ele = labelRef.current;\n    ele.addEventListener('click', handleClick);\n    ele.addEventListener('dragenter', handleDragIn);\n    ele.addEventListener('dragleave', handleDragOut);\n    ele.addEventListener('dragover', handleDrag);\n    ele.addEventListener('drop', handleDrop);\n    return () => {\n      ele.removeEventListener('click', handleClick);\n      ele.removeEventListener('dragenter', handleDragIn);\n      ele.removeEventListener('dragleave', handleDragOut);\n      ele.removeEventListener('dragover', handleDrag);\n      ele.removeEventListener('drop', handleDrop);\n    };\n  }, [\n    handleClick,\n    handleDragIn,\n    handleDragOut,\n    handleDrag,\n    handleDrop,\n    labelRef\n  ]);\n\n  return dragging;\n}\n","import {\n  Description,\n  DescriptionWrapper,\n  HoverMsg,\n  UploaderWrapper\n} from './style';\nimport { acceptedExt, checkType, getFileSizeMB } from './utils';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport DrawTypes from './DrawTypes';\nimport ImageAdd from './ImageAdd';\nimport useDragging from './useDragging';\n\ntype Props = {\n  name?: string;\n  hoverTitle?: string;\n  types?: Array<string>;\n  classes?: string;\n  children?: JSX.Element;\n  maxSize?: number;\n  minSize?: number;\n  fileOrFiles?: Array<File> | File | null;\n  disabled?: boolean | false;\n  disableClicking?: boolean | false;\n  label?: string | undefined;\n  multiple?: boolean | false;\n  onSizeError?: (arg0: string) => void;\n  onTypeError?: (arg0: string) => void;\n  onDrop?: (arg0: File | Array<File>) => void;\n  onSelect?: (arg0: File | Array<File>) => void;\n  handleChange?: (arg0: File | Array<File> | File) => void;\n  onDraggingStateChange?: (dragging: boolean) => void;\n  dropMessageStyle?: React.CSSProperties | undefined;\n};\n/**\n *\n * Draw a description on the frame\n * @param currFile - The uploaded file\n * @param uploaded - boolean to check if the file uploaded or not yet\n * @param typeError - boolean to check if the file has type errors\n * @param disabled - boolean to check if input is disabled\n * @param label - string to add custom label\n * @returns JSX Element\n *\n * @internal\n *\n */\nconst drawDescription = (\n  currFile: Array<File> | File | null,\n  uploaded: boolean,\n  typeError: boolean,\n  disabled: boolean | undefined,\n  label: string | undefined\n) => {\n  return typeError ? (\n    <span>File type/size error, Hovered on types!</span>\n  ) : (\n    <Description>\n      {disabled ? (\n        <span>Upload disabled</span>\n      ) : !currFile && !uploaded ? (\n        <>\n          {label ? (\n            <>\n              <span>{label.split(' ')[0]}</span>{' '}\n              {label.substr(label.indexOf(' ') + 1)}\n            </>\n          ) : (\n            <>\n              <span>Upload</span> or drop a file right here\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <span>Uploaded Successfully!</span> Upload another?\n        </>\n      )}\n    </Description>\n  );\n};\n\n/**\n * File uploading main function\n * @param props - {name,\n    hoverTitle,\n    types,\n    handleChange,\n    classes,\n    children,\n    maxSize,\n    minSize,\n    fileOrFiles,\n    onSizeError,\n    onTypeError,\n    onSelect,\n    onDrop,\n    onTypeError,\n    disabled,\n    label,\n    multiple,\n    onDraggingStateChange\n  }\n * @returns JSX Element\n */\nexport const FileUploader: React.FC<Props> = (props: Props): JSX.Element => {\n  const {\n    name,\n    hoverTitle,\n    types,\n    handleChange,\n    classes,\n    children,\n    maxSize,\n    minSize,\n    fileOrFiles,\n    onSizeError,\n    onTypeError,\n    onSelect,\n    onDrop,\n    disabled,\n    disableClicking,\n    label,\n    multiple,\n    onDraggingStateChange,\n    dropMessageStyle\n  } = props;\n  const labelRef = useRef<HTMLLabelElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [uploaded, setUploaded] = useState(false);\n  const [currFiles, setFile] = useState<Array<File> | File | null>(null);\n  const [error, setError] = useState(false);\n\n  const validateFile = (file: File) => {\n    if (types && !checkType(file, types)) {\n      // types included and type not in them\n      setError(true);\n      if (onTypeError) onTypeError('File type is not supported');\n      return false;\n    }\n    if (maxSize && getFileSizeMB(file.size) > maxSize) {\n      setError(true);\n      if (onSizeError) onSizeError('File size is too big');\n      return false;\n    }\n    if (minSize && getFileSizeMB(file.size) < minSize) {\n      setError(true);\n      if (onSizeError) onSizeError('File size is too small');\n      return false;\n    }\n    return true;\n  };\n\n  const handleChanges = (files: File | Array<File>): boolean => {\n    let checkError = false;\n    if (files) {\n      if (files instanceof File) {\n        checkError = !validateFile(files);\n      } else {\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i];\n          checkError = !validateFile(file) || checkError;\n        }\n      }\n      if (checkError) return false;\n      if (handleChange) handleChange(files);\n      setFile(files);\n\n      setUploaded(true);\n      setError(false);\n      return true;\n    }\n    return false;\n  };\n\n  const blockEvent = (ev: any) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n  const handleClick = (ev: any) => {\n    ev.stopPropagation();\n    // eslint-disable-next-line no-param-reassign\n    if (inputRef && inputRef.current && !disableClicking) {\n      inputRef.current.click();\n    }\n  };\n\n  const handleInputChange = (ev: any) => {\n    const allFiles = ev.target.files;\n    const files = multiple ? allFiles : allFiles[0];\n    const success = handleChanges(files);\n    if (onSelect && success) onSelect(files);\n  };\n  const dragging = useDragging({\n    labelRef,\n    inputRef,\n    multiple,\n    handleChanges,\n    onDrop\n  });\n\n  useEffect(() => {\n    onDraggingStateChange?.(dragging);\n  }, [dragging]);\n\n  useEffect(() => {\n    if (fileOrFiles) {\n      setUploaded(true);\n      setFile(fileOrFiles);\n    } else {\n      if (inputRef.current) inputRef.current.value = '';\n      setUploaded(false);\n      setFile(null);\n    }\n  }, [fileOrFiles]);\n\n  return (\n    <UploaderWrapper\n      overRide={children}\n      className={`${classes || ''} ${disabled ? 'is-disabled' : ''}`}\n      ref={labelRef}\n      htmlFor={name}\n      onClick={blockEvent}\n    >\n      <input\n        onClick={handleClick}\n        onChange={handleInputChange}\n        accept={acceptedExt(types)}\n        ref={inputRef}\n        type=\"file\"\n        name={name}\n        disabled={disabled}\n        multiple={multiple}\n      />\n      {dragging && (\n        <HoverMsg style={dropMessageStyle}>\n          <span>{hoverTitle || 'Drop Here'}</span>\n        </HoverMsg>\n      )}\n      {!children && (\n        <>\n          <ImageAdd />\n          <DescriptionWrapper error={error}>\n            {drawDescription(currFiles, uploaded, error, disabled, label)}\n            <DrawTypes types={types} minSize={minSize} maxSize={maxSize} />\n          </DescriptionWrapper>\n        </>\n      )}\n      {children}\n    </UploaderWrapper>\n  );\n};\nexport default FileUploader;\n"],"names":["css","jsx","jsxs","useState","useCallback","useEffect","Fragment","useRef"],"mappings":"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"}